<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.maven.core.dao.ParkingCarMapper">
    <resultMap id="BaseResultMap" type="com.ssm.maven.core.entity.ParkingCar">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="license_car" property="license_car" jdbcType="VARCHAR"/>
        <result column="enter_time" property="enter_time" jdbcType="DATE"/>
        <result column="leave_time" property="leave_time" jdbcType="DATE"/>
        <result column="car_type" property="car_type" jdbcType="INTEGER"/>
        <result column="park_id" property="park_id" jdbcType="INTEGER"/>
        <result column="paymoney" property="paymoney" jdbcType="INTEGER"/>
        <result column="del_flag" property="del_flag" jdbcType="INTEGER"/>
        <result column="science_id" property="science_id" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, license_car, enter_time, leave_time, car_type, park_id, paymoney, del_flag, science_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from parking_car
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from parking_car
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ssm.maven.core.entity.ParkingCar">
    insert into parking_car (id, license_car, enter_time, 
      leave_time, car_type, park_id, 
      paymoney, del_flag, science_id
      )
        values (#{id,jdbcType=INTEGER}, #{license_car,jdbcType=VARCHAR}, #{enter_time,jdbcType=DATE},
        #{leave_time,jdbcType=DATE}, #{car_type,jdbcType=INTEGER}, #{park_id,jdbcType=INTEGER},
        #{paymoney,jdbcType=INTEGER}, #{del_flag,jdbcType=INTEGER}, #{science_id,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ssm.maven.core.entity.ParkingCar">
        insert into parking_car
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="license_car != null">
                license_car,
            </if>
            <if test="enter_time != null">
                enter_time,
            </if>
            <if test="leave_time != null">
                leave_time,
            </if>
            <if test="car_type != null">
                car_type,
            </if>
            <if test="park_id != null">
                park_id,
            </if>
            <if test="paymoney != null">
                paymoney,
            </if>
            <if test="del_flag != null">
                del_flag,
            </if>
            <if test="science_id != null">
                science_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="license_car != null">
                #{license_car,jdbcType=VARCHAR},
            </if>
            <if test="enter_time != null">
                #{enter_time,jdbcType=DATE},
            </if>
            <if test="leave_time != null">
                #{leave_time,jdbcType=DATE},
            </if>
            <if test="car_type != null">
                #{car_type,jdbcType=INTEGER},
            </if>
            <if test="park_id != null">
                #{park_id,jdbcType=INTEGER},
            </if>
            <if test="paymoney != null">
                #{paymoney,jdbcType=INTEGER},
            </if>
            <if test="del_flag != null">
                #{del_flag,jdbcType=INTEGER},
            </if>
            <if test="science_id != null">
                #{science_id,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssm.maven.core.entity.ParkingCar">
        update parking_car
        <set>
            <if test="license_car != null">
                license_car = #{license_car,jdbcType=VARCHAR},
            </if>
            <if test="enter_time != null">
                enter_time = #{enter_time,jdbcType=DATE},
            </if>
            <if test="leave_time != null">
                leave_time = #{leave_time,jdbcType=DATE},
            </if>
            <if test="car_type != null">
                car_type = #{car_type,jdbcType=INTEGER},
            </if>
            <if test="park_id != null">
                park_id = #{park_id,jdbcType=INTEGER},
            </if>
            <if test="paymoney != null">
                paymoney = #{paymoney,jdbcType=INTEGER},
            </if>
            <if test="del_flag != null">
                del_flag = #{del_flag,jdbcType=INTEGER},
            </if>
            <if test="science_id != null">
                science_id = #{science_id,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssm.maven.core.entity.ParkingCar">
    update parking_car
        set license_car = #{license_car,jdbcType=VARCHAR},
        enter_time = #{enter_time,jdbcType=DATE},
        leave_time = #{leave_time,jdbcType=DATE},
        car_type = #{car_type,jdbcType=INTEGER},
        park_id = #{park_id,jdbcType=INTEGER},
      paymoney = #{paymoney,jdbcType=INTEGER},
        del_flag = #{del_flag,jdbcType=INTEGER},
        science_id = #{science_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>



    <select id="searchCarInfor" parameterType="com.ssm.maven.core.entity.CarCustom"
            resultType="com.ssm.maven.core.entity.CarCustom">
        SELECT parking_car.* FROM parking_car WHERE 1=1
        <if test="science_id != null and science_id !='' ">
            AND parking_car.science_id = #{science_id}
        </if>
        <if test="end_day != null and end_day  !='' ">
            AND parking_car.day = #{end_day}
        </if>
        AND parking_car.del_flag = 1
    </select>


    <!--查询所有景区-->
    <select id="getAllScenicspot" resultType="com.ssm.maven.core.entity.Scenicspot">
        SELECT * FROM scenicspot
    </select>

    <!--获取所有景区每天的车辆信息-->
    <select id="getAllSpotCar" resultType="com.ssm.maven.core.entity.CarCustom">
        SELECT DISTINCT parking_car.day,COUNT(parking_car.id) carCount,scenicspot.code,scenicspot.address,scenicspot.scenicname,scenicspot.max_car
        FROM parking_car LEFT JOIN scenicspot
                                   ON parking_car.science_id = scenicspot.code
        WHERE scenicspot.del_flag=1 AND parking_car.del_flag=1
        ORDER BY scenicspot.code ASC, parking_car.day ASC
    </select>

    <!--根据时间和景区名查询-->
    <select id="findSpotCarByNameOrTime" parameterType="com.ssm.maven.core.entity.CarCustom"
            resultType="com.ssm.maven.core.entity.CarCustom">
        SELECT DISTINCT
        parking_car.day,COUNT(parking_car.id) carCount,scenicspot.code,scenicspot.address,scenicspot.scenicname,scenicspot.max_car
        FROM parking_car LEFT JOIN scenicspot
        ON parking_car.science_id = scenicspot.code
        WHERE scenicspot.del_flag=1 AND parking_car.del_flag=1
        <if test="start_day != null and start_day != '' and end_day != null and end_day!='' ">
            AND parking_car.day between #{start_day} and #{end_day}
        </if>
        <if test="start_day != null and start_day != '' and end_day == null ">
            AND parking_car.day <![CDATA[>=]]> #{start_day}
        </if>
        <if test="end_day != null and end_day!='' and start_day == null ">
            AND parking_car.day <![CDATA[<=]]> #{end_day}
        </if>
        AND scenicname = #{scenicname}
        ORDER BY scenicspot.code ASC, parking_car.day ASC
    </select>

    <!--获取指定的景区某天的所有车辆-->
    <select id="findAllCarByCodeAndTime" parameterType="com.ssm.maven.core.entity.ParkingCar"
            resultType="com.ssm.maven.core.entity.ParkingCar">
        SELECT * FROM parking_car WHERE science_id=#{science_id} AND day=#{day} AND del_flag=1
    </select>

    <!--获取指定的景区某天的所有车辆的总数-->
    <select id="getAllCarNumber" parameterType="com.ssm.maven.core.entity.ParkingCar" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM parking_car WHERE science_id=#{science_id} AND day=#{day} AND del_flag=1
    </select>

    <!--查询车辆信息-->
    <select id="findCar" parameterType="com.ssm.maven.core.entity.ParkingCar"
            resultType="com.ssm.maven.core.entity.ParkingCar">
        SELECT * FROM parking_car WHERE day=#{day} AND del_flag=1 AND science_id=#{science_id} AND license_car LIKE
            CONCAT(CONCAT('%',#{license_car}),'%') OR park_id LIKE CONCAT(CONCAT('%',#{license_car}),'%')
    </select>
    <!--根据车车辆的日期和景区code删除-->
    <update id="deleteByCodeAndTime" parameterType="com.ssm.maven.core.entity.ParkingCar">
        UPDATE parking_car SET del_flag=0 WHERE science_id=#{science_id} AND day=#{day}
    </update>
    <!--文件导入-->
    <insert id="insertCarBatch" parameterType="java.util.List">

        INSERT INTO parking_car
        (license_car,enter_time,leave_time,car_type,park_id,del_flag,science_id,day)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.license_car},#{item.enter_time},#{item.leave_time},#{item.car_type},#{item.park_id},#{item.del_flag},#{item.science_id},#{item.day})
        </foreach>
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            select LAST_INSERT_ID();
        </selectKey>
    </insert>

    <!--导出-->
    <select id="getAllCar" resultType="com.ssm.maven.core.entity.CarCustom">
        SELECT parking_car.*,scenicspot.code,scenicspot.address,scenicspot.scenicname,scenicspot.max_car FROM parking_car,scenicspot WHERE parking_car.science_id=scenicspot.code AND parking_car.del_flag=1 AND scenicspot.del_flag=1
    </select>

    <!--c查询景区最大承载车量-->
    <select id="getNumberByCode" parameterType="java.lang.Integer" resultType="com.ssm.maven.core.entity.Scenicspot">
        SELECT scenicspot.* FROM scenicspot WHERE scenicspot.code=#{code}
    </select>

    <!--查询车辆数量更具时间和景区id-->
    <select id="getNumByCodeAndTime" parameterType="com.ssm.maven.core.entity.ParkingCar"
            resultType="java.lang.Integer">
        SELECT COUNT(*) FROM parking_car WHERE #{enter_time} BETWEEN enter_time AND leave_time AND del_flag=1 AND science_id=#{science_id}
    </select>



    <select id="getCount" parameterType="com.ssm.maven.core.entity.CarCustom" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT id) FROM parking_car WHERE parking_car.day = #{end_day} AND parking_car.science_id = #{science_id}
    </select>


    <!--    查询实时车流数目-->
    <select id="searchCarHLCInfor" parameterType="com.ssm.maven.core.entity.CarCustom"
            resultType="java.lang.Integer">
        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 9:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 10:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 11:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 12:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 13:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 14:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 15:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 16:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 17:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 18:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 19:59:59')
        )
        )
        AND parking_car.del_flag = 1

        UNION ALL

        SELECT COUNT(parking_car.id) FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id
        WHERE day = #{end_day} AND scenicspot.id = 1
        AND (
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:59:59')
        )
        OR
        (
        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:00:00') AND
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:59:59') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:00:00') AND
        parking_car.leave_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:59:59')
        )
        OR
        (
        parking_car.enter_time <![CDATA[<=]]> CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:00:00') AND
        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 20:59:59')
        )
        )
        AND parking_car.del_flag = 1
        <!--        SELECT parking_car.*,scenicspot.* FROM parking_car left join scenicspot ON scenicspot.id = parking_car.science_id-->
        <!--        WHERE day = #{end_day} AND scenicspot.id = 1 AND-->
        <!--        parking_car.enter_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00')-->
        <!--        AND parking_car.enter_time <= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:59:59')-->
        <!--        AND-->
        <!--        parking_car.leave_time >= CONCAT(DATE_FORMAT(#{end_day},'%Y-%m-%d'),' 8:00:00')-->

        <!--        AND parking_car.del_flag = '1' ORDER BY parking_car.id ASC-->


    </select>




</mapper>